<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:if="ant:if" xmlns:unless="ant:unless" name="mysql-osx">

  <property name="mysql.binary" value="mysql-5.7.12-osx10.11-x86_64" />
  <property name="mysql.binary.file" value="${mysql.binary}.tar.gz" />
  <property name="repository" value="${user.home}/.sitoolkit/repository/mysql" />

  <!-- determine socket file name -->
  <echo message="${tool.home}" file="${tool.home}/.path"/>
  <checksum file="${tool.home}/.path" property="hash"/>
  <!-- socket file path length must be < 103 -->
  <property name="mysql.socket" value="/tmp/mysql.${hash}.sock" />


  <target name="unarchive" unless="${mysql.unarchived}">
    <untar src="${download.home}/${mysql.binary}.tar.gz"
           dest="${mysql.basedir}"
           compression="gzip" />
    <move file="${mysql.basedir}/${mysql.binary}" tofile="${mysql.basedir}" />
    <chmod perm="u=rwx" file="${mysql.basedir}/bin/**" type="both" failonerror="true" />
  </target>


  <target name="create-datadir" unless="${mysql.datadir.created}">

    <mkdir dir="${mysql.datadir}" />

    <exec executable="${mysql.basedir}/bin/mysqld" failonerror="true">
      <arg value="--initialize-insecure" />
      <arg value="--basedir=${mysql.basedir}" />
      <arg value="--datadir=${mysql.datadir}" />
    </exec>

    <exec executable="${mysql.basedir}/bin/mysql_ssl_rsa_setup" failonerror="true">
      <arg value="--basedir=${mysql.basedir}" />
      <arg value="--datadir=${mysql.datadir}" />
    </exec>

  </target>


  <target name="create-db" unless="${mysql.db-created}">
    <copy file="${tool.home}/initialize.sql" todir="${tool.home}/target">
      <filterset>
        <filter token="db.name" value="${db.name}" />
        <filter token="db.username" value="${db.username}" />
        <filter token="db.password" value="${db.password}" />
      </filterset>
    </copy>

    <exec executable="${mysql.basedir}/bin/mysql" failonerror="true">
      <arg value="--socket=${mysql.socket}" />
      <arg value="-h" />
      <arg value="${db.host}" />
      <arg value="-P" />
      <arg value="${db.port.local}" />
      <arg value="-u" />
      <arg value="root" />
      <arg value="mysql" />
      <arg value="-t" />
      <arg value="-e" />
      <arg value="source ${tool.home}/target/initialize.sql" />
    </exec>
  </target>


  <target name="start">
    <condition property="mysql.started">
      <available file="${mysql.socket}" />
    </condition>

    <echo message="Starting MySQL server ..." unless:true="${mysql.started}" />

    <copy file="${tool.home}/my.cnf"
          todir="${mysql.datadir}"
          overwrite="true"
          unless:true="${mysql.started}">
      <filterset>
        <filter token="db.port.local" value="${db.port.local}" />
        <filter token="mysql.socket" value="${mysql.socket}" />
      </filterset>
    </copy>

    <parallel>
      <daemons>
        <exec executable="${mysql.basedir}/bin/mysqld_safe"
              dir="${mysql.basedir}"
              failonerror="true"
              unless:true="${mysql.started}">
          <arg value="--defaults-extra-file=${mysql.datadir}/my.cnf" />
          <arg value="--basedir=${mysql.basedir}" />
          <arg value="--datadir=${mysql.datadir}" />
        </exec>
      </daemons>
    </parallel>

    <echo message="Wait for starting MySQL server" />
    <waitfor maxwait="10" maxwaitunit="second" checkevery="500" checkeveryunit="millisecond">
      <available file="${mysql.socket}" />
    </waitfor>
    <echo message="MySQL server is started" />

  </target>


  <target name="stop">
    <echo message="Stopping MySQL server ..." />

    <exec executable="${mysql.basedir}/bin/mysqladmin" dir="${mysql.basedir}">
      <arg value="--socket=${mysql.socket}" />
      <arg value="-u" />
      <arg value="root" />
      <arg value="shutdown" />
    </exec>
  </target>


  <target name="drop-datadir">
    <echo message="Deleting MySQL data directory ${mysql.datadir}" />
    <antcall target="stop" />

    <delete dir="${mysql.datadir}" />
  </target>
</project>